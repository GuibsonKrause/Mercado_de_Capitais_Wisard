package Visao;

import CDP.Cotacao;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.ArrayList;

/**
 *
 * @author Guibson Krause / Bianca
 */
public class TelaIncial extends javax.swing.JFrame
{
    private static final int port = 6789;
    int i = 0;
    private ArrayList<String> listCot = new ArrayList<>();

    public ArrayList<String> getListCot()
    {
        return listCot;
    }

    public void setListCot(ArrayList<String> listCot)
    {
        this.listCot = listCot;
    }

    
    public TelaIncial()
    {
        initComponents();
        jRadioButtonAvalia.setEnabled(false);
        jRadioButtonInicial.setSelected(true);
        jRadioButtonTreinam.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroupFase = new javax.swing.ButtonGroup();
        jLabelCotacao = new javax.swing.JLabel();
        jPanelFase = new javax.swing.JPanel();
        jRadioButtonInicial = new javax.swing.JRadioButton();
        jRadioButtonTreinam = new javax.swing.JRadioButton();
        jRadioButtonAvalia = new javax.swing.JRadioButton();
        jButtonEnviar = new javax.swing.JButton();
        txtCotacao = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistemas Distribuídos");

        jLabelCotacao.setText("Cotação:");

        jPanelFase.setBorder(javax.swing.BorderFactory.createTitledBorder("Fase"));

        buttonGroupFase.add(jRadioButtonInicial);
        jRadioButtonInicial.setText("Inicial");

        buttonGroupFase.add(jRadioButtonTreinam);
        jRadioButtonTreinam.setText("Treinamento");

        buttonGroupFase.add(jRadioButtonAvalia);
        jRadioButtonAvalia.setText("Avaliação");

        javax.swing.GroupLayout jPanelFaseLayout = new javax.swing.GroupLayout(jPanelFase);
        jPanelFase.setLayout(jPanelFaseLayout);
        jPanelFaseLayout.setHorizontalGroup(
            jPanelFaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonInicial)
                    .addComponent(jRadioButtonTreinam)
                    .addComponent(jRadioButtonAvalia))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanelFaseLayout.setVerticalGroup(
            jPanelFaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFaseLayout.createSequentialGroup()
                .addComponent(jRadioButtonInicial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonTreinam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonAvalia))
        );

        jButtonEnviar.setText("Enviar");
        jButtonEnviar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonEnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabelCotacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCotacao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jPanelFase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCotacao)
                            .addComponent(txtCotacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addComponent(jButtonEnviar)
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelFase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void texto(Cotacao cot)
    {
        txtCotacao.getText();

    }
    private void jButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarActionPerformed
        String cot = "";
        Cotacao cota = new Cotacao();
        texto(cota);
        cot = txtCotacao.getText();
        messageServer(cot);
        txtCotacao.setText("");
    }//GEN-LAST:event_jButtonEnviarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException
                | InstantiationException
                | IllegalAccessException
                | javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(TelaIncial.class.getName()).
                    log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                new TelaIncial().setVisible(true);

            }
        });
    }

    public String getHost()
    {
        String hostName = "";
        try
        {
            hostName = InetAddress.getLocalHost().getHostName();
        } catch (UnknownHostException e)
        {
            System.out.println("Exception caught =" + e.getMessage());
        }
        return hostName;

    }

    public void messageServer(String message)
    {
        try (DatagramSocket aSocket = new DatagramSocket())
        {

            byte[] b = message.getBytes();
            InetAddress aHost = InetAddress.getByName(getHost());
            int serverPort = port, a;

            DatagramPacket request = new DatagramPacket(b, message.length(),
                    aHost, serverPort);

            aSocket.send(request);
            txtCotacao.setText("");
            byte[] buffer = new byte[100];

            DatagramPacket reply = new DatagramPacket(buffer, buffer.length);
            aSocket.receive(reply);

            if (reply.getLength() == 0)
            {
                jRadioButtonInicial.setSelected(true);
            }
            if (reply.getLength() == 1)
            {
                jRadioButtonAvalia.setEnabled(false);
                jRadioButtonTreinam.setSelected(true);
                jRadioButtonTreinam.setEnabled(true);
                jRadioButtonInicial.setEnabled(false);

            }
            if (reply.getLength() == 2)
            {

                jRadioButtonAvalia.setEnabled(true);
                jRadioButtonAvalia.setSelected(true);
                jRadioButtonTreinam.setEnabled(false);
                jRadioButtonInicial.setEnabled(false);
            }
            System.out.println("Reply  " + reply.getLength());
        } catch (SocketException e)
        {
            System.out.println("Socket: " + e.getMessage());
        } catch (IOException e)
        {
            System.out.println("Input Output: " + e.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupFase;
    private javax.swing.JButton jButtonEnviar;
    private javax.swing.JLabel jLabelCotacao;
    private javax.swing.JPanel jPanelFase;
    private javax.swing.JRadioButton jRadioButtonAvalia;
    private javax.swing.JRadioButton jRadioButtonInicial;
    private javax.swing.JRadioButton jRadioButtonTreinam;
    private javax.swing.JTextField txtCotacao;
    // End of variables declaration//GEN-END:variables
}
